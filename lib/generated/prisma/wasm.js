
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.8.2
 * Query Engine version: 2060c79ba17c6bb9f5823312b6f6b7f4a845738e
 */
Prisma.prismaVersion = {
  client: "6.8.2",
  engine: "2060c79ba17c6bb9f5823312b6f6b7f4a845738e"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  email: 'email'
};

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  alt: 'alt',
  fileId: 'fileId',
  fileWidth: 'fileWidth',
  fileHeight: 'fileHeight',
  uploadedById: 'uploadedById',
  likes: 'likes',
  dislikes: 'dislikes',
  favoriteCount: 'favoriteCount',
  createdAt: 'createdAt'
};

exports.Prisma.LikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  imageId: 'imageId',
  createdAt: 'createdAt'
};

exports.Prisma.DislikeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  imageId: 'imageId',
  createdAt: 'createdAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  imageId: 'imageId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.FavoriteScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  imageId: 'imageId',
  createdAt: 'createdAt'
};

exports.Prisma.FriendRequestScalarFieldEnum = {
  id: 'id',
  fromId: 'fromId',
  toId: 'toId',
  createdAt: 'createdAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  id: 'id',
  user1Id: 'user1Id',
  user2Id: 'user2Id',
  since: 'since'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Image: 'Image',
  Like: 'Like',
  Dislike: 'Dislike',
  Comment: 'Comment',
  Favorite: 'Favorite',
  FriendRequest: 'FriendRequest',
  Friendship: 'Friendship'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "H:\\Coding\\image\\lib\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [
      "driverAdapters"
    ],
    "sourceFilePath": "H:\\Coding\\image\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.8.2",
  "engineVersion": "2060c79ba17c6bb9f5823312b6f6b7f4a845738e",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"driverAdapters\"]\n  output          = \"../lib/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id       String @id\n  username String @unique\n  email    String @unique\n\n  sentRequests     FriendRequest[] @relation(\"SentRequests\")\n  receivedRequests FriendRequest[] @relation(\"ReceivedRequests\")\n\n  friendsAsUser1 Friendship[] @relation(\"FriendshipUser1\")\n  friendsAsUser2 Friendship[] @relation(\"FriendshipUser2\")\n\n  images    Image[]    @relation(\"UserImages\")\n  comments  Comment[]  @relation(\"UserComments\")\n  favorites Favorite[]\n\n  likes    Like[]    @relation(\"UserLikes\")\n  dislikes Dislike[] @relation(\"UserDislikes\")\n}\n\nmodel Image {\n  id         String  @id @default(cuid())\n  url        String\n  alt        String?\n  fileId     String\n  fileWidth  Int?\n  fileHeight Int?\n\n  uploadedBy   User   @relation(\"UserImages\", fields: [uploadedById], references: [id])\n  uploadedById String\n\n  likes    Int @default(0)\n  dislikes Int @default(0)\n\n  likedBy    Like[]\n  dislikedBy Dislike[]\n\n  comments      Comment[]\n  favorites     Favorite[] @relation(\"ImageFavorites\")\n  favoriteCount Int        @default(0)\n  createdAt     DateTime   @default(now())\n\n  @@index([uploadedById])\n}\n\nmodel Like {\n  id        String   @id @default(cuid())\n  user      User     @relation(\"UserLikes\", fields: [userId], references: [id]) // ✅ named relation\n  userId    String\n  image     Image    @relation(fields: [imageId], references: [id])\n  imageId   String\n  createdAt DateTime @default(now())\n\n  @@unique([userId, imageId])\n}\n\nmodel Dislike {\n  id        String   @id @default(cuid())\n  user      User     @relation(\"UserDislikes\", fields: [userId], references: [id]) // ✅ named relation\n  userId    String\n  image     Image    @relation(fields: [imageId], references: [id])\n  imageId   String\n  createdAt DateTime @default(now())\n\n  @@unique([userId, imageId])\n}\n\nmodel Comment {\n  id        String   @id @default(cuid())\n  content   String\n  image     Image    @relation(fields: [imageId], references: [id])\n  imageId   String\n  user      User     @relation(\"UserComments\", fields: [userId], references: [id])\n  userId    String\n  createdAt DateTime @default(now())\n}\n\nmodel Favorite {\n  id        String   @id @default(cuid())\n  user      User     @relation(fields: [userId], references: [id])\n  userId    String\n  image     Image    @relation(\"ImageFavorites\", fields: [imageId], references: [id])\n  imageId   String\n  createdAt DateTime @default(now())\n\n  @@unique([userId, imageId])\n}\n\nmodel FriendRequest {\n  id     String @id @default(cuid())\n  from   User   @relation(\"SentRequests\", fields: [fromId], references: [id])\n  fromId String\n\n  to   User   @relation(\"ReceivedRequests\", fields: [toId], references: [id])\n  toId String\n\n  createdAt DateTime @default(now())\n}\n\nmodel Friendship {\n  id String @id @default(cuid())\n\n  user1   User   @relation(\"FriendshipUser1\", fields: [user1Id], references: [id])\n  user1Id String\n\n  user2   User   @relation(\"FriendshipUser2\", fields: [user2Id], references: [id])\n  user2Id String\n\n  since DateTime @default(now())\n\n  @@unique([user1Id, user2Id])\n}\n",
  "inlineSchemaHash": "80e0b281cb0bf19642480be0843a7bc25f63c26ce56a26f140ac4e0cf63134cd",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sentRequests\",\"kind\":\"object\",\"type\":\"FriendRequest\",\"relationName\":\"SentRequests\"},{\"name\":\"receivedRequests\",\"kind\":\"object\",\"type\":\"FriendRequest\",\"relationName\":\"ReceivedRequests\"},{\"name\":\"friendsAsUser1\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"FriendshipUser1\"},{\"name\":\"friendsAsUser2\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"FriendshipUser2\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"UserImages\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"UserComments\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"likes\",\"kind\":\"object\",\"type\":\"Like\",\"relationName\":\"UserLikes\"},{\"name\":\"dislikes\",\"kind\":\"object\",\"type\":\"Dislike\",\"relationName\":\"UserDislikes\"}],\"dbName\":null},\"Image\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"alt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileWidth\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fileHeight\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserImages\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"likes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dislikes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"likedBy\",\"kind\":\"object\",\"type\":\"Like\",\"relationName\":\"ImageToLike\"},{\"name\":\"dislikedBy\",\"kind\":\"object\",\"type\":\"Dislike\",\"relationName\":\"DislikeToImage\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToImage\"},{\"name\":\"favorites\",\"kind\":\"object\",\"type\":\"Favorite\",\"relationName\":\"ImageFavorites\"},{\"name\":\"favoriteCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Like\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserLikes\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"ImageToLike\"},{\"name\":\"imageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Dislike\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserDislikes\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"DislikeToImage\"},{\"name\":\"imageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"CommentToImage\"},{\"name\":\"imageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserComments\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Favorite\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FavoriteToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"ImageFavorites\"},{\"name\":\"imageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"FriendRequest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"from\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SentRequests\"},{\"name\":\"fromId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"to\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReceivedRequests\"},{\"name\":\"toId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Friendship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user1\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FriendshipUser1\"},{\"name\":\"user1Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user2\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FriendshipUser2\"},{\"name\":\"user2Id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"since\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

